# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

###########################################################################
# Precompiled headers support
###########################################################################
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = modules
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/version.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/kadu-config.tmp
CONFIG_CLEAN_FILES =
depcomp =
am__depfiles_maybe =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DYNAMIC_OPT = @DYNAMIC_OPT@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GADU_INCLUDES = @GADU_INCLUDES@
GADU_LIBS = @GADU_LIBS@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MY_SUBDIRS = @MY_SUBDIRS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PHEADERS_ENABLED_FALSE = @PHEADERS_ENABLED_FALSE@
PHEADERS_ENABLED_TRUE = @PHEADERS_ENABLED_TRUE@
PNG_LIBS = @PNG_LIBS@
PTHREAD_CPPFLAGS = @PTHREAD_CPPFLAGS@
PTHREAD_LDFLAGS = @PTHREAD_LDFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
QT_INCLUDES = @QT_INCLUDES@
QT_LIBS = @QT_LIBS@
QT_LRELEASE_DIR = @QT_LRELEASE_DIR@
QT_MOC_DIR = @QT_MOC_DIR@
SET_MAKE = @SET_MAKE@
SHARED_FLAGS = @SHARED_FLAGS@
SHARED_OPT = @SHARED_OPT@
SHELL = @SHELL@
SO_EXT = @SO_EXT@
STATIC_MODULES_DECLS = @STATIC_MODULES_DECLS@
STATIC_MODULES_REGRS = @STATIC_MODULES_REGRS@
STRIP = @STRIP@
VERSION = @VERSION@
Z_LIBS = @Z_LIBS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_dependency_tracking = @enable_dependency_tracking@
enable_final = @enable_final@
enable_pheaders = @enable_pheaders@
enabled_emoticon_themes = @enabled_emoticon_themes@
enabled_icon_themes = @enabled_icon_themes@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
shared_modules = @shared_modules@
sharedstatedir = @sharedstatedir@
snapshot = @snapshot@
static_modules = @static_modules@
static_modules_ldflags = @static_modules_ldflags@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
@PHEADERS_ENABLED_TRUE@PHEADERS_INCLUDES = -include kadu-headers.h

###########################################################################
LOGFILE = ../logfile.txt
CONFIGURE_INCLUDES = $(XFREE_INCLUDES) $(QT_INCLUDES) $(OPENSSL_INCLUDES) $(GSM_INCLUDES) $(GADU_INCLUDES)
INCLUDES = $(PHEADERS_INCLUDES) -I.. -I../kadu-core $(CONFIGURE_INCLUDES)
AM_CPPFLAGS = $(PTHREAD_CPPFLAGS) -DQT_THREAD_SUPPORT -D_REENTRANT -DDATADIR=\"$(datadir)\" -DLIBDIR=\"$(libdir)\" -DBINDIR=\"$(bindir)\"
CLEANFILES = */*.$(SO_EXT) */*.a */*.o */*_moc.cpp */*.d */.final.d
module_d_files = $(addsuffix .d,$(basename $(module_o_files)))
module_targets = $(addprefix module_,$(shared_modules) $(static_modules))
install_targets = $(addprefix install_,$(shared_modules) $(static_modules))
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  --ignore-deps modules/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  --ignore-deps modules/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
uninstall-info-am:
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-local

.PHONY: all all-am check check-am clean clean-generic clean-local \
	distclean distclean-generic distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-data-local install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am uninstall uninstall-am uninstall-info-am \
	uninstall-local


# dirty hack - leading space required because of automake "if" support
# time to say automake goodbye?
 ifeq ($(enable_dependency_tracking),yes)
 ifneq (,$(module_d_files))
 ifeq ($(enable_final),yes)
-include $(module_name)/.final.d
 else
-include $(module_d_files)
 endif
 endif
 endif

# this empty targets are specified to mark these files are not-intermediate
$(module_o_files):
$(module_src_files):
$(module_moc_cpp_files):

 ifeq ($(enable_final),yes)

%.$(SO_EXT): $(module_src_files) $(module_moc_cpp_files) $(module_h_files) $(module_name)/.final.d
	@dir="$$module_name" && \
	fincpp="$$dir/.final.cpp" && \
	finc="$$dir/.final.c" && \
	if test -f $$finc; then \
		echo compiling c files for module $$dir && \
		echo "$(CC) -o $$dir/.final.c.o -c -fPIC $$finc $(CONFIGURE_INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS)" >> $(LOGFILE) && \
		$(CC) -o $$dir/.final.c.o -c -fPIC $$finc $(CONFIGURE_INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS); \
		fincpp="$$fincpp $$dir/.final.c.o"; \
	fi && \
	echo compiling and linking module $$dir && \
	echo "$(CXX) $(SHARED_OPT) -o $@ -fPIC $$fincpp $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS) $(module_ldflags) $(SHARED_FLAGS)" >> $(LOGFILE) && \
	$(CXX) $(SHARED_OPT) -o $@ -fPIC $$fincpp $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS) $(module_ldflags) $(SHARED_FLAGS)

%.a: $(module_src_files) $(module_moc_cpp_files) $(module_h_files) $(module_name)/.final.d
	@dir="$$module_name" && \
	fincpp="$$dir/.final.cpp" && \
	finc="$$dir/.final.c" && \
	fino="$$dir/.final.cpp.o" && \
	if test -f $$finc; then \
		echo compiling c files for module $$dir && \
		echo "$(CC) -o $$dir/.final.c.o -c -fPIC $$finc $(CONFIGURE_INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CFLAGS)" >> $(LOGFILE) && \
		$(CC) -o $$dir/.final.c.o -c -fPIC $$finc $(CONFIGURE_INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CFLAGS); \
		fino="$$fino $$dir/.final.c.o"; \
	fi && \
	echo compiling static module $$dir && \
	echo "$(CXX) -c -o $$dir/.final.cpp.o -fPIC $$fincpp $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS)" >> $(LOGFILE) && \
	$(CXX) -c -o $$dir/.final.cpp.o -fPIC $$fincpp $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS) && \
	echo "$(AR) rs $@ $$fino" >> $(LOGFILE) && \
	$(AR) rs $@ $$fino

 else

%.$(SO_EXT): $(module_o_files)
	@echo linking module $@
	@echo "$(CXX) $(SHARED_OPT) -o $@ $(module_o_files) $(module_ldflags) $(SHARED_FLAGS)" >> $(LOGFILE)
	@$(CXX) $(SHARED_OPT) -o $@ $(module_o_files) $(module_ldflags) $(SHARED_FLAGS)

%.a: $(module_o_files)
	@echo creating archive for static module $@
	@echo "$(AR) rs $@ $(module_o_files)" >> $(LOGFILE)
	@$(AR) rs $@ $(module_o_files)

 endif

%.d: %.cpp
	@echo generating dependency file for $<
	@echo '$(CXX) -M $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS) $< | sed "s,\(.*\):,$(basename $@).o $@:," > $@' >> $(LOGFILE)
	@$(CXX) -M $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS) $< | sed "s,\(.*\):,$(basename $@).o $@:," > $@

%.d: %.c
	@echo generating dependency file for $<
	@echo '$(CC) -M $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags)  $(CXXFLAGS) $< | sed "s,\(.*\):,$(basename $@).o $@:," > $@' >> $(LOGFILE)
	@$(CC) -M $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags)  $(CXXFLAGS) $< | sed "s,\(.*\):,$(basename $@).o $@:," > $@

%.o: %.cpp
	@echo compiling file $<
	@echo "$(CXX) -o $@ -c -fPIC $< $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags)  $(CXXFLAGS)" >> $(LOGFILE)
	@$(CXX) -o $@ -c -fPIC $< $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags)  $(CXXFLAGS)

%.o: %.c
	@echo compiling file $<
	@echo "$(CC) -o $@ -c -fPIC $< $(CONFIGURE_INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CFLAGS)" >> $(LOGFILE)
	$(CC) -o $@ -c -fPIC $< $(CONFIGURE_INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CFLAGS)

%_moc.cpp: %.h
	@echo generating $@
	@echo "$(QT_MOC_DIR)/moc -o $@ $<" >> $(LOGFILE)
	@$(QT_MOC_DIR)/moc -o $@ $<

make_module_dirs:
	$(mkinstalldirs) "$(DESTDIR)$(includedir)/kadu/modules/"
	$(mkinstalldirs) "$(DESTDIR)$(datadir)/kadu/modules/"
	$(mkinstalldirs) "$(DESTDIR)$(datadir)/kadu/modules/translations/"
	$(mkinstalldirs) "$(DESTDIR)$(datadir)/kadu/modules/data/"
	$(mkinstalldirs) "$(DESTDIR)$(libdir)/kadu/modules/bin/"

install-data-local: uninstall-local make_module_dirs $(install_targets)

$(install_targets):
	@dir=`echo $@ | sed s/install_//` && \
	echo -e "\033[32m>>>\033[0m Installing $$dir module ..."; \
	if [ ! -d "$(DESTDIR)$(datadir)/kadu/modules/" ]; then \
		$(mkinstalldirs) "$(DESTDIR)$(datadir)/kadu/modules/"; \
	fi && \
	$(INSTALL_DATA) $$dir/$$dir.desc "$(DESTDIR)$(datadir)/kadu/modules"; \
	if [ ! -d "$(DESTDIR)$(includedir)/kadu/modules/" ]; then \
		$(mkinstalldirs) "$(DESTDIR)$(includedir)/kadu/modules/"; \
	fi && \
	$(INSTALL_DATA) $$dir/*.h "$(DESTDIR)$(includedir)/kadu/modules"; \
	if test -d $$dir/translations; then \
		if [ ! -d "$(DESTDIR)$(datadir)/kadu/modules/translations/" ]; then \
			$(mkinstalldirs) "$(DESTDIR)$(datadir)/kadu/modules/translations/"; \
		fi; \
		$(INSTALL_DATA) $$dir/translations/*.qm "$(DESTDIR)$(datadir)/kadu/modules/translations/"; \
	fi; \
	if test -d $$dir/data; then \
		if [ ! -d "$(DESTDIR)$(datadir)/kadu/modules/data/" ]; then \
			$(mkinstalldirs) "$(DESTDIR)$(datadir)/kadu/modules/data/"; \
		fi; \
		for sub_dir in `find $$dir/data -type d | grep -v /CVS | grep -v /.svn`; do \
			dst_dir=`echo "$$sub_dir" | sed "s,/data/,/," | sed "s,/data$$,,"`; \
			$(mkinstalldirs) "$(DESTDIR)$(datadir)/kadu/modules/data/$$dst_dir"; \
			for new_file in `find $$sub_dir -maxdepth 1 -type f | sed "s/ /_SPACE_/g"`; do \
				new_file=`echo "$$new_file" | sed "s/_SPACE_/ /g"`; \
				$(INSTALL_DATA) "$$new_file" "$(DESTDIR)$(datadir)/kadu/modules/data/$$dst_dir"; \
			done; \
		done; \
	fi; \
	if test -d $$dir/bin; then \
		if [ ! -d "$(DESTDIR)$(libdir)/kadu/modules/bin/" ]; then \
			$(mkinstalldirs) "$(DESTDIR)$(libdir)/kadu/modules/bin/"; \
		fi; \
		for sub_dir in `find $$dir/bin -type d | grep -v /CVS | grep -v /.svn`; do \
			dst_dir=`echo "$$sub_dir" | sed "s,/bin/,/," | sed "s,/bin$$,,"`; \
			$(mkinstalldirs) "$(DESTDIR)$(libdir)/kadu/modules/bin/$$dst_dir"; \
			for new_file in `find $$sub_dir -maxdepth 1 -type f | sed "s/ /_SPACE_/g"`; do \
				new_file=`echo "$$new_file" | sed "s/_SPACE_/ /g"`; \
				$(INSTALL_PROGRAM) "$$new_file" "$(DESTDIR)$(libdir)/kadu/modules/bin/$$dst_dir"; \
			done; \
		done; \
	fi; \
	if test -z `expr " $(static_modules) " : ".* \($$dir\) "`; then \
		if [ ! -d "$(DESTDIR)$(libdir)/kadu/modules/" ]; then \
			$(mkinstalldirs) "$(DESTDIR)$(libdir)/kadu/modules/"; \
		fi; \
		$(INSTALL_PROGRAM) $$dir/$$dir.$(SO_EXT) "$(DESTDIR)$(libdir)/kadu/modules/"; \
	fi

uninstall-local:
	rm -f "$(DESTDIR)$(includedir)/kadu/modules"/*.h
	rm -f "$(DESTDIR)$(datadir)/kadu/modules"/*.desc
	rm -f "$(DESTDIR)$(libdir)/kadu/modules"/*.$(SO_EXT)
	rm -f "$(DESTDIR)$(datadir)/kadu/modules/translations"/*.qm
	rm -rf "$(DESTDIR)$(datadir)/kadu/modules/data"/*
	rm -rf "$(DESTDIR)$(libdir)/kadu/modules/bin"/*

clean-local:
	@for dir in $(static_modules) $(shared_modules); do \
		MODULE_3RDPARTY= && \
		. ./$$dir/spec && \
		for mod_3rdparty in $$MODULE_3RDPARTY; do \
			$(MAKE) -C $$dir/$$mod_3rdparty clean; \
		done; \
		if test -d $$dir/translations; then \
			rm -f $$dir/translations/*.qm; \
		fi; \
	done

$(module_targets):
	@dir=`echo $@ | sed s/module_//` && \
	echo && \
	echo -e "\033[32m>>>\033[0m Compiling $$dir module ..." && \
	MODULE_SOURCES= && \
	MODULE_MOC_HEADERS= && \
	MODULE_HEADERS= && \
	MODULE_CXXFLAGS= && \
	MODULE_LDFLAGS= && \
	MODULE_3RDPARTY= && \
	MODULE_MAKE_CMD= && \
	MODULE_DIR=../modules/$$dir && \
	. ./$$dir/spec && \
	MODULE_CXXFLAGS=`cat $$dir/.cxxflags` && \
	MODULE_LDFLAGS=`cat $$dir/.ldflags` && \
	echo -e "    [LDFLAGS=\"$$MODULE_LDFLAGS\", CXXFLAGS=\"$$MODULE_CXXFLAGS\"]" && \
	echo && \
	for mod_3rdparty in $$MODULE_3RDPARTY; do \
		$(MAKE) -C $$dir/$$mod_3rdparty CC="$(CC)" CXX="$(CXX)"; \
	done && \
	moc_cpp_files="" && \
	o_files="" && \
	h_files="" && \
	src_files="" && \
	for src_file in $$MODULE_SOURCES; do \
		src_files="$$src_files $$dir/$$src_file"; \
		o_file=`expr $$src_file : "\(.*\)\\.c.*"`.o && \
		o_files="$$o_files $$dir/$$o_file"; \
	done && \
	for moc_h_file in $$MODULE_MOC_HEADERS; do \
		h_files="$$h_files $$dir/$$moc_h_file" && \
		moc_cpp_file=`expr $$moc_h_file : "\(.*\).h"`_moc.cpp && \
		moc_cpp_files="$$moc_cpp_files $$dir/$$moc_cpp_file" && \
		o_file=`expr $$moc_h_file : "\(.*\).h"`_moc.o && \
		o_files="$$o_files $$dir/$$o_file"; \
	done && \
	for h_file in $$MODULE_HEADERS; do \
		h_files="$$h_files $$dir/$$h_file"; \
	done && \
	file_name=$$dir.$(SO_EXT) && \
	if test -z `expr " $(shared_modules) " : ".* \($$dir\) "`; then \
		file_name=$$dir.a; \
	fi && \
	$(MAKE) $$moc_cpp_files && \
	$(MAKE) "module_name=$$dir" \
		"module_o_files=$$o_files" \
		"module_src_files=$$src_files" \
		"module_h_files=$$h_files" \
		"module_moc_cpp_files=$$moc_cpp_files" \
		"module_cxxflags=$$MODULE_CXXFLAGS" \
		"module_ldflags=$$MODULE_LDFLAGS" \
		$$dir/$$file_name && \
	cd $$dir && eval "$$MODULE_MAKE_CMD" && \
	if test -d translations; then \
		cd translations && \
		for trans in *.ts; do \
			qm=`echo $${trans} | sed "s/\.ts/\.qm/"` && \
			if [ ! -e $${qm} -o $$trans -nt $${qm} ]; then \
				echo compiling translation file $$trans; \
				echo $(QT_LRELEASE_DIR)/lrelease $$trans >> ../../$(LOGFILE); \
				$(QT_LRELEASE_DIR)/lrelease $$trans; \
			fi; \
		done && \
		cd ..; \
	fi && \
	cd .. || \
	exit 1

all: $(module_targets)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
