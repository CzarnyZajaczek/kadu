bin_PROGRAMS = kadu

LOGFILE = ../logfile.txt

kadu_SOURCES = \
about.cpp \
action.cpp \
chat.cpp \
chat_colors.cpp \
chat_manager.cpp \
chat_manager_slots.cpp \
chat_message.cpp \
chat_styles.cpp \
color_selector.cpp \
config_dialog.cpp \
config_file.cpp \
custom_input.cpp \
debug.cpp \
dnshandler.cpp \
dockarea.cpp \
emoticons.cpp \
expimp.cpp \
gadu.cpp \
gadu-private.cpp \
gadu_images_manager.cpp \
gadu_rich_text.cpp \
groups_manager.cpp \
history.cpp \
html_document.cpp \
http_client.cpp \
icons_manager.cpp \
ignore.cpp \
kadu.cpp \
kadu_parser.cpp \
kadu_splitter.cpp \
kadu_text_browser.cpp \
main.cpp \
message_box.cpp \
misc.cpp \
modules.cpp \
pending_msgs.cpp \
personal_info.cpp \
protocol.cpp \
protocols_manager.cpp \
search.cpp \
status.cpp \
tabbar.cpp \
themes.cpp \
toolbar.cpp \
toolbutton.cpp \
userbox.cpp \
userinfo.cpp \
userlist.cpp \
userlist-private.cpp \
usergroup.cpp \
userlistelement.cpp \
updates.cpp


kadudir = $(includedir)/kadu

kadu_HEADERS = \
about.h \
action.h \
chat.h \
chat_colors.h \
chat_manager.h \
chat_manager_slots.h \
chat_message.h \
chat_styles.h \
color_selector.h \
config_dialog.h \
config_file.h \
custom_input.h \
debug.h \
dnshandler.h \
dockarea.h \
emoticons.h \
expimp.h \
gadu.h \
gadu-private.h \
gadu_images_manager.h \
gadu_rich_text.h \
groups_manager.h \
history.h \
html_document.h \
http_client.h \
icons_manager.h \
ignore.h \
kadu.h \
kadu_parser.h \
kadu_splitter.h \
kadu_text_browser.h \
message_box.h \
misc.h \
modules.h \
pending_msgs.h \
personal_info.h \
protocol.h \
protocols_manager.h \
search.h \
status.h \
tabbar.h \
themes.h \
toolbar.h \
toolbutton.h \
userbox.h \
userinfo.h \
userlist.h \
userlist-private.h \
usergroup.h \
userlistelement.h \
updates.h

BUILT_SOURCES = \
moc/about_moc.cpp \
moc/action_moc.cpp \
moc/chat_moc.cpp \
moc/chat_manager_moc.cpp \
moc/chat_manager_slots_moc.cpp \
moc/color_selector_moc.cpp \
moc/config_dialog_moc.cpp \
moc/custom_input_moc.cpp \
moc/dnshandler_moc.cpp \
moc/dockarea_moc.cpp \
moc/emoticons_moc.cpp \
moc/expimp_moc.cpp \
moc/gadu_moc.cpp \
moc/gadu-private_moc.cpp \
moc/groups_manager_moc.cpp \
moc/history_moc.cpp \
moc/http_client_moc.cpp \
moc/icons_manager_moc.cpp \
moc/ignore_moc.cpp \
moc/kadu_moc.cpp \
moc/kadu_text_browser_moc.cpp \
moc/message_box_moc.cpp \
moc/misc_moc.cpp \
moc/modules_moc.cpp \
moc/pending_msgs_moc.cpp \
moc/personal_info_moc.cpp \
moc/protocol_moc.cpp \
moc/protocols_manager_moc.cpp \
moc/search_moc.cpp \
moc/status_moc.cpp \
moc/tabbar_moc.cpp \
moc/themes_moc.cpp \
moc/toolbar_moc.cpp \
moc/toolbutton_moc.cpp \
moc/updates_moc.cpp \
moc/userbox_moc.cpp \
moc/userinfo_moc.cpp \
moc/userlist_moc.cpp \
moc/userlist-private_moc.cpp \
moc/usergroup_moc.cpp \
moc/userlistelement_moc.cpp \
version.cpp

am_kadu_OBJECTS = \
obj/about.$(OBJEXT) \
obj/action.$(OBJEXT) \
obj/chat.$(OBJEXT) \
obj/chat_colors.$(OBJEXT) \
obj/chat_manager.$(OBJEXT) \
obj/chat_manager_slots.$(OBJEXT) \
obj/chat_message.$(OBJEXT) \
obj/chat_styles.$(OBJEXT) \
obj/color_selector.$(OBJEXT) \
obj/config_dialog.$(OBJEXT) \
obj/config_file.$(OBJEXT) \
obj/custom_input.$(OBJEXT) \
obj/debug.$(OBJEXT) \
obj/dnshandler.$(OBJEXT) \
obj/dockarea.$(OBJEXT) \
obj/emoticons.$(OBJEXT) \
obj/expimp.$(OBJEXT) \
obj/gadu.$(OBJEXT) \
obj/gadu-private.$(OBJEXT) \
obj/gadu_images_manager.$(OBJEXT) \
obj/gadu_rich_text.$(OBJEXT) \
obj/groups_manager.$(OBJEXT) \
obj/history.$(OBJEXT) \
obj/html_document.$(OBJEXT) \
obj/http_client.$(OBJEXT) \
obj/icons_manager.$(OBJEXT) \
obj/ignore.$(OBJEXT) \
obj/kadu.$(OBJEXT) \
obj/kadu_parser.$(OBJEXT) \
obj/kadu_splitter.$(OBJEXT) \
obj/kadu_text_browser.$(OBJEXT) \
obj/main.$(OBJEXT) \
obj/message_box.$(OBJEXT) \
obj/misc.$(OBJEXT) \
obj/modules.$(OBJEXT) \
obj/pending_msgs.$(OBJEXT) \
obj/personal_info.$(OBJEXT) \
obj/protocol.$(OBJEXT) \
obj/protocols_manager.$(OBJEXT) \
obj/search.$(OBJEXT) \
obj/status.$(OBJEXT) \
obj/tabbar.$(OBJEXT) \
obj/themes.$(OBJEXT) \
obj/toolbar.$(OBJEXT) \
obj/toolbutton.$(OBJEXT) \
obj/userbox.$(OBJEXT) \
obj/userinfo.$(OBJEXT) \
obj/userlist.$(OBJEXT) \
obj/userlist-private.$(OBJEXT) \
obj/usergroup.$(OBJEXT) \
obj/userlistelement.$(OBJEXT) \
obj/updates.$(OBJEXT) \
obj/version.$(OBJEXT) \
obj/about_moc.$(OBJEXT) \
obj/action_moc.$(OBJEXT) \
obj/chat_moc.$(OBJEXT) \
obj/chat_manager_moc.$(OBJEXT) \
obj/chat_manager_slots_moc.$(OBJEXT) \
obj/color_selector_moc.$(OBJEXT) \
obj/config_dialog_moc.$(OBJEXT) \
obj/custom_input_moc.$(OBJEXT) \
obj/dnshandler_moc.$(OBJEXT) \
obj/dockarea_moc.$(OBJEXT) \
obj/emoticons_moc.$(OBJEXT) \
obj/expimp_moc.$(OBJEXT) \
obj/gadu_moc.$(OBJEXT) \
obj/gadu-private_moc.$(OBJEXT) \
obj/groups_manager_moc.$(OBJEXT) \
obj/history_moc.$(OBJEXT) \
obj/http_client_moc.$(OBJEXT) \
obj/icons_manager_moc.$(OBJEXT) \
obj/ignore_moc.$(OBJEXT) \
obj/kadu_moc.$(OBJEXT) \
obj/kadu_text_browser_moc.$(OBJEXT) \
obj/message_box_moc.$(OBJEXT) \
obj/misc_moc.$(OBJEXT) \
obj/modules_moc.$(OBJEXT) \
obj/pending_msgs_moc.$(OBJEXT) \
obj/personal_info_moc.$(OBJEXT) \
obj/protocol_moc.$(OBJEXT) \
obj/protocols_manager_moc.$(OBJEXT) \
obj/search_moc.$(OBJEXT) \
obj/status_moc.$(OBJEXT) \
obj/tabbar_moc.$(OBJEXT) \
obj/themes_moc.$(OBJEXT) \
obj/toolbar_moc.$(OBJEXT) \
obj/toolbutton_moc.$(OBJEXT) \
obj/userbox_moc.$(OBJEXT) \
obj/userinfo_moc.$(OBJEXT) \
obj/userlist_moc.$(OBJEXT) \
obj/userlist-private_moc.$(OBJEXT) \
obj/usergroup_moc.$(OBJEXT) \
obj/userlistelement_moc.$(OBJEXT) \
obj/updates_moc.$(OBJEXT)

DEPS=./deps

 ifeq ($(enable_dependency_tracking),yes)

include $(DEPS)/about.d
include $(DEPS)/about_moc.d
include $(DEPS)/action.d
include $(DEPS)/action_moc.d
include $(DEPS)/chat.d
include $(DEPS)/chat_moc.d
include $(DEPS)/chat_colors.d
include $(DEPS)/chat_manager.d
include $(DEPS)/chat_manager_moc.d
include $(DEPS)/chat_manager_slots.d
include $(DEPS)/chat_manager_slots_moc.d
include $(DEPS)/chat_message.d
include $(DEPS)/chat_styles.d
include $(DEPS)/color_selector.d
include $(DEPS)/color_selector_moc.d
include $(DEPS)/config_dialog.d
include $(DEPS)/config_dialog_moc.d
include $(DEPS)/config_file.d
include $(DEPS)/custom_input.d
include $(DEPS)/custom_input_moc.d
include $(DEPS)/debug.d
include $(DEPS)/dnshandler.d
include $(DEPS)/dnshandler_moc.d
include $(DEPS)/dockarea.d
include $(DEPS)/dockarea_moc.d
include $(DEPS)/emoticons.d
include $(DEPS)/emoticons_moc.d
include $(DEPS)/expimp.d
include $(DEPS)/expimp_moc.d
include $(DEPS)/gadu-private.d
include $(DEPS)/gadu-private_moc.d
include $(DEPS)/gadu.d
include $(DEPS)/gadu_moc.d
include $(DEPS)/gadu_images_manager.d
include $(DEPS)/gadu_rich_text.d
include $(DEPS)/groups_manager.d
include $(DEPS)/groups_manager_moc.d
include $(DEPS)/history.d
include $(DEPS)/history_moc.d
include $(DEPS)/html_document.d
include $(DEPS)/http_client.d
include $(DEPS)/http_client_moc.d
include $(DEPS)/icons_manager.d
include $(DEPS)/icons_manager_moc.d
include $(DEPS)/ignore.d
include $(DEPS)/ignore_moc.d
include $(DEPS)/kadu.d
include $(DEPS)/kadu_moc.d
include $(DEPS)/kadu_parser.d
include $(DEPS)/kadu_splitter.d
include $(DEPS)/kadu_text_browser.d
include $(DEPS)/kadu_text_browser_moc.d
include $(DEPS)/main.d
include $(DEPS)/message_box.d
include $(DEPS)/message_box_moc.d
include $(DEPS)/misc.d
include $(DEPS)/misc_moc.d
include $(DEPS)/modules.d
include $(DEPS)/modules_moc.d
include $(DEPS)/pending_msgs.d
include $(DEPS)/pending_msgs_moc.d
include $(DEPS)/personal_info.d
include $(DEPS)/personal_info_moc.d
include $(DEPS)/protocol.d
include $(DEPS)/protocol_moc.d
include $(DEPS)/protocols_manager.d
include $(DEPS)/protocols_manager_moc.d
include $(DEPS)/search.d
include $(DEPS)/search_moc.d
include $(DEPS)/status.d
include $(DEPS)/status_moc.d
include $(DEPS)/tabbar.d
include $(DEPS)/tabbar_moc.d
include $(DEPS)/themes.d
include $(DEPS)/themes_moc.d
include $(DEPS)/toolbar.d
include $(DEPS)/toolbar_moc.d
include $(DEPS)/toolbutton.d
include $(DEPS)/toolbutton_moc.d
include $(DEPS)/updates.d
include $(DEPS)/updates_moc.d
include $(DEPS)/userbox.d
include $(DEPS)/userbox_moc.d
include $(DEPS)/usergroup.d
include $(DEPS)/usergroup_moc.d
include $(DEPS)/userinfo.d
include $(DEPS)/userinfo_moc.d
include $(DEPS)/userlist-private.d
include $(DEPS)/userlist-private_moc.d
include $(DEPS)/userlist.d
include $(DEPS)/userlist_moc.d
include $(DEPS)/userlistelement.d
include $(DEPS)/userlistelement_moc.d

 endif

.cpp.o:
	@echo -e "\033[32m >>> make obj/"$@" <<< \033[0m"
	make obj/$@

.cpp.obj:
	@echo "go away ;)"


 ifeq ($(enable_dependency_tracking),yes)

obj/%.o: %.cpp
	@echo generating dependency file for $<
	@$(CXXCOMPILE) -M $< -MT "$@" > deps/`echo $@|sed "s/obj\/\(.*\).o/\1.d/"`
	@echo '$(CXXCOMPILE) -M $< -MT "$@" > deps/`echo $@|sed "s/obj\/\(.*\).o/\1.d/"`' >> $(LOGFILE)
	@echo compiling file $<
	@echo $(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$< >> $(LOGFILE)
	@$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

obj/%_moc.o: moc/%_moc.cpp
	@echo generating dependency file for $<
	@echo '$(CXXCOMPILE) -M $< -MT "$@" > deps/`echo $@|sed "s/obj\/\(.*\).o/\1.d/"`' >> $(LOGFILE)
	@$(CXXCOMPILE) -M $< -MT "$@" > deps/`echo $@|sed "s/obj\/\(.*\).o/\1.d/"`
	@echo compiling file $<
	@echo $(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$< >> $(LOGFILE)
	@$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

 else

obj/%.o: %.cpp
	@echo compiling file $<
	@echo $(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$< >> $(LOGFILE)
	@$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

obj/%_moc.o: moc/%_moc.cpp
	@echo compiling file $<
	@echo $(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$< >> $(LOGFILE)
	@$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

 endif

moc/%_moc.cpp: %.h
	@echo generating $@
	@echo $(QT_MOC_DIR)/moc -o $@ $< >> $(LOGFILE)
	@$(QT_MOC_DIR)/moc -o $@ $<

 ifeq ($(enable_final),yes)

kadu$(EXEEXT): $(kadu_SOURCES) $(kadu_HEADERS) $(BUILT_SOURCES) $(kadu_DEPENDENCIES)
	@rm -f kadu$(EXEEXT)
	$(CXXCOMPILE) $(AM_LDFLAGS) $(LDFLAGS) -o $@ $(kadu_LDFLAGS) final.cpp $(kadu_LDADD) $(LIBS)

 else

kadu$(EXEEXT): $(kadu_OBJECTS) $(kadu_DEPENDENCIES)
	@rm -f kadu$(EXEEXT)
	$(CXXLINK) $(kadu_LDFLAGS) $(kadu_OBJECTS) $(kadu_LDADD) $(LIBS)

 endif

 ifeq ($(snapshot),yes)
version.cpp: ../SNAPSHOT
	@echo "const char *detailed_version = \"`cat ../SNAPSHOT`\";" > $@;
 else
version.cpp: $(kadu_SOURCES) *.h ../modules/*/*.h ../modules/*/*.cpp ../libgadu/lib/*.c ../libgadu/lib/*.h
	@core_ver=`svnversion -n .`; \
	mod_ver=`svnversion -n ../modules`; \
	lg_ver=`svnversion -n ../libgadu`; \
	if [ "$$core_ver" != "$$mod_ver" -o "$$core_ver" != "$$lg_ver" -o "$$mod_ver" != "$$lg_ver" ]; then \
		ver="core:$$core_ver modules:$$mod_ver libgadu:$$lg_ver"; \
	else \
		ver="$$core_ver"; \
	fi; \
	echo "const char *detailed_version = \"$$ver\";" | diff -q - $@ >/dev/null 2>/dev/null || echo "const char *detailed_version = \"$$ver\";" > $@;
 endif

###########################################################################
# Precompiled headers support
###########################################################################

if PHEADERS_ENABLED
PHEADERS_INCLUDES = -I.. -include kadu-headers.h
PHEADERS_CLEANFILES = *.h.gch
AM_CXXFLAGS = -fPIC
endif

# dirty hack - leading space required because od automake "if" support
# time to say automake goodbye?
 ifeq ($(enable_pheaders),yes)

-include kadu-headers.d

kadu-headers.d: kadu-headers.h
	@echo generating dependency file for $<
	@echo "$(CXX) -M $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS) $< | sed "s,\(.*\):,$(basename $@).h.gch $@:," > $@" >> $(LOGFILE)
	@$(CXX) -M $(INCLUDES) $(AM_CPPFLAGS) $(module_cxxflags) $(CXXFLAGS) $< | sed "s,\(.*\):,$(basename $@).h.gch $@:," > $@

%.h.gch: %.h
	@echo compiling headers
	@rm -f $@
	@echo $(CXX) -o $@ -c $< $(INCLUDES) $(AM_CPPFLAGS) $(AM_CXXFLAGS) $(module_cxxflags)  $(CXXFLAGS) >> $(LOGFILE)
	@$(CXX) -o $@ -c $< $(INCLUDES) $(AM_CPPFLAGS) $(AM_CXXFLAGS) $(module_cxxflags)  $(CXXFLAGS)

 endif

###########################################################################

INCLUDES = $(PHEADERS_INCLUDES) $(XFREE_INCLUDES) $(QT_INCLUDES) $(OPENSSL_INCLUDES) $(GADU_INCLUDES)

kadu_LDADD = \
$(foreach mod,$(basename $(static_modules)),../modules/$(mod)/$(mod).a) \
$(static_modules_ldflags) $(GADU_LIBS) \
$(PTHREAD_LIBS) $(PNG_LIBS) $(QT_LIBS)

kadu_LDFLAGS = \
$(PTHREAD_LDFLAGS) $(DYNAMIC_OPT) $(OPENSSL_LIBS)

AM_CPPFLAGS = $(PTHREAD_CPPFLAGS) -DQT_THREAD_SUPPORT -D_REENTRANT -DDATADIR=\"$(datadir)\" -DLIBDIR=\"$(libdir)\" -DBINDIR=\"$(bindir)\"

EXTRA_DIST = hi16-app-kadu.png hi22-app-kadu.png hi24-app-kadu.png hi32-app-kadu.png hi48-app-kadu.png hi64-app-kadu.png hi128-app-kadu.png hi256-app-kadu.png kadu.desktop
CLEANFILES = obj/*.o moc/*_moc.cpp $(PHEADERS_CLEANFILES)


install-data-local:
#	$(mkinstalldirs) "$(DESTDIR)/$(includedir)/kadu/"
#	$(INSTALL_DATA) *.h "$(DESTDIR)/$(includedir)/kadu/"
	@if test -w "$(DESTDIR)$(datadir)"; then \
		$(mkinstalldirs) "$(DESTDIR)$(datadir)/applnk/Internet/"; \
		echo "[Desktop Entry]" > "$(DESTDIR)$(datadir)/applnk/Internet/kadu.desktop"; \
		echo "Type=Application" >> "$(DESTDIR)$(datadir)/applnk/Internet/kadu.desktop"; \
		echo "Exec=$(bindir)/kadu" >> "$(DESTDIR)$(datadir)/applnk/Internet/kadu.desktop"; \
		echo "Icon=kadu.png" >> "$(DESTDIR)$(datadir)/applnk/Internet/kadu.desktop"; \
		echo "MiniIcon=kadu-16.png" >> "$(DESTDIR)$(datadir)/applnk/Internet/kadu.desktop"; \
		echo "Terminal=0" >> "$(DESTDIR)$(datadir)/applnk/Internet/kadu.desktop"; \
		echo "Name=Kadu" >> "$(DESTDIR)$(datadir)/applnk/Internet/kadu.desktop"; \
		$(mkinstalldirs) "$(DESTDIR)$(datadir)/pixmaps/"; \
		$(INSTALL_DATA) hi16-app-kadu.png "$(DESTDIR)$(datadir)/pixmaps/kadu-16.png"; \
		$(INSTALL_DATA) hi22-app-kadu.png "$(DESTDIR)$(datadir)/pixmaps/kadu-22.png"; \
		$(INSTALL_DATA) hi24-app-kadu.png "$(DESTDIR)$(datadir)/pixmaps/kadu-24.png"; \
		$(INSTALL_DATA) hi32-app-kadu.png "$(DESTDIR)$(datadir)/pixmaps/kadu.png"; \
		$(INSTALL_DATA) hi48-app-kadu.png "$(DESTDIR)$(datadir)/pixmaps/kadu-48.png"; \
		$(INSTALL_DATA) hi64-app-kadu.png "$(DESTDIR)$(datadir)/pixmaps/kadu-64.png"; \
		$(INSTALL_DATA) hi128-app-kadu.png "$(DESTDIR)$(datadir)/pixmaps/kadu-128.png"; \
		$(INSTALL_DATA) hi256-app-kadu.png "$(DESTDIR)$(datadir)/pixmaps/kadu-256.png"; \
		echo ""; \
		echo "Icons installed to $(DESTDIR)$(datadir)/pixmaps"; \
		echo "Link(kadu.desktop) installed to $(DESTDIR)$(datadir)/applnk/Internet"; \
		echo ""; \
	else \
		echo "";\
		echo "         *******************************************************************"; \
		echo "         *                                                                 *"; \
		echo "         *          You don't have permission to write $(datadir)          *"; \
		echo "         *          Icons and link(kadu.desktop) won't be installed        *"; \
		echo "         *                                                                 *"; \
		echo "         *******************************************************************"; \
		echo $(DESTDIR)"";\
	fi;

uninstall-local:
	rm -f "$(DESTDIR)$(includedir)/kadu"/*.h
	rm -f "$(DESTDIR)$(datadir)/applnk/Internet/kadu.desktop"
	rm -f "$(DESTDIR)$(datadir)/pixmaps/kadu-16.png"
	rm -f "$(DESTDIR)$(datadir)/pixmaps/kadu-22.png"
	rm -f "$(DESTDIR)$(datadir)/pixmaps/kadu-24.png"
	rm -f "$(DESTDIR)$(datadir)/pixmaps/kadu.png"
	rm -f "$(DESTDIR)$(datadir)/pixmaps/kadu-48.png"
	rm -f "$(DESTDIR)$(datadir)/pixmaps/kadu-64.png"
	rm -f "$(DESTDIR)$(datadir)/pixmaps/kadu-128.png"
	rm -f "$(DESTDIR)$(datadir)/pixmaps/kadu-256.png"

clean-local:
	for i in deps/*.d; do \
		echo -n > $$i; \
	done
